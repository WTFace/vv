{"version":3,"sources":["components/card/card.js","components/card-list/card-list.js","components/search-box/search-box.js","components/top/nav.js","components/top/search.js","components/top/update.js","components/top/top.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","monster","name","src","id","alt","CardList","monsters","map","m","SearchBox","handleChange","type","onChange","Nav","href","Search","Update","Top","width","height","Component","App","e","setState","searchField","target","value","func","console","log","state","fetch","then","res","json","this","filtered","filter","includes","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAEaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,+BAAf,UACI,6BAAKD,EAAME,QAAQC,OACnB,qBAAKC,IAAG,+BAA0BJ,EAAME,QAAQG,IAAMC,IAAI,SCFrDC,EAAW,SAAAP,GAAK,OACzB,qBAAKC,UAAU,mCAAf,SACKD,EAAMQ,SAASC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAMR,QAASQ,GAAQA,EAAEL,UCH7CM,EAAY,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aACvB,OAAO,uBAAOC,KAAK,SAASC,SAAUF,KCD7BG,EAAM,SAAAf,GAAK,OACpB,sBAAKC,UAAU,oCAAf,UACI,mBAAGe,KAAK,IAAR,2BACA,mBAAGA,KAAK,IAAR,gCACA,mBAAGA,KAAK,IAAR,sCACA,mBAAGA,KAAK,IAAR,4CACA,mBAAGA,KAAK,IAAR,0CCNKC,EAAS,SAAAjB,GAAK,OACvB,sBAAKC,UAAU,2BAAf,UACI,uBAAOA,UAAU,qBAAqBY,KAAK,SAC3C,wBAAQZ,UAAU,sFAAlB,SACA,mBAAGA,UAAU,iBAAb,0BCJKiB,EAAS,SAAAlB,GAAK,OACvB,sBAAKC,UAAU,QAAf,UACI,sDACA,qBAAKA,UAAU,sBCAVkB,EAAb,kDACI,aAAc,wCADlB,0CAKI,WACI,OACI,gCACI,cAAC,EAAD,IACA,sBAAKlB,UAAU,mCAAf,UACI,qBAAKG,IAAI,GAAGE,IAAI,OAAOc,MAAM,MAAMC,OAAO,OAC1C,cAAC,EAAD,IACA,cAAC,EAAD,cAZpB,GAAyBC,aCwCVC,G,wDAtCb,aAAc,IAAD,8BACX,gBAeFX,aAAe,SAAAY,GAAC,OAAI,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAhB3C,EAiBbC,KAAO,WACLC,QAAQC,IAAI,IAAZ,iBAhBA,EAAKC,MAAQ,CACXxB,SAAU,GACVkB,YAAa,IAJJ,E,qDAQb,WAAoB,IAAD,OACjBO,MAAM,8CACLC,MAAM,SAAAC,GAAG,OAAIA,EAAIC,UACjBF,MAAM,SAAAC,GACL,EAAKV,SAAS,CAACjB,SAAU2B,S,oBAS7B,WAAS,IAAD,EAC0BE,KAAKL,MAA9BxB,EADD,EACCA,SAAUkB,EADX,EACWA,YACXY,EAAW9B,EAAS+B,QAAQ,SAAA7B,GAAC,OAAIA,EAAEP,KAAKqC,SAASd,MAEvD,OACE,sBAAKzB,UAAU,UAAf,UACE,cAAC,EAAD,IAEA,wBAAQwC,QAASJ,KAAKR,KAAtB,oBACA,cAAC,EAAD,CAAWjB,aAAcyB,KAAKzB,eAC9B,cAAC,EAAD,CAAUJ,SAAU8B,W,GAhCVhB,cCMHoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3f144b9d.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Card = props => \n    <div className=\"p-2 border-2 border-blue-500\">\n        <h1>{props.monster.name}</h1>\n        <img src={`https://robohash.org/${props.monster.id}`} alt=\"\" />\n    </div>\n\n","import React from \"react\";\nimport { Card } from \"../card/card\";\n\nexport const CardList = props => (\n    <div className=\"card-list grid grid-cols-4 gap-4\">\n        {props.monsters.map(m => <Card monster={m} key={m.id}/>)}\n    </div>\n)\n","import React from 'react'\n\nexport const SearchBox = ({handleChange}) => {\n    return <input type=\"search\" onChange={handleChange}/>\n}\n\n","import React from \"react\";\n\nexport const Nav = props => (\n    <div className=\"flex justify-end gap-8 border-b-2\">\n        <a href=\"#\">1개월</a>\n        <a href=\"#\">로그인</a>\n        <a href=\"#\">회원가입</a>\n        <a href=\"#\">마이페이지</a>\n        <a href=\"#\">고객센터</a>\n    </div>\n);","import React from \"react\";\n\nexport const Search = props => (\n    <div className=\"flex border-2 w-1/2 h-10\">\n        <input className=\"w-full rounded p-2\" type=\"text\"/>\n        <button className=\"bg-white w-auto flex justify-end items-center text-gray-600 p-2 hover:text-gray-400\">\n        <i className=\"material-icons\">search</i>\n        </button>\n    </div>\n);","import React from \"react\";\n\nexport const Update = props => (\n    <div className=\"w-1/5\">\n        <div>최신 update</div>\n        <div className=\"border-2 h-16\">\n            \n        </div>\n    </div>\n);","import React, { Component } from 'react';\nimport { Nav } from './nav';\nimport { Search } from './search';\nimport { Update } from './update';\n\nexport class Top extends Component{\n    constructor(){\n        super();\n    }\n\n    render(){\n        return (\n            <div>\n                <Nav></Nav>\n                <div className=\"flex justify-around items-center\">\n                    <img src=\"\" alt=\"LOGO\" width=\"150\" height=\"50\"/>\n                    <Search></Search>\n                    <Update></Update>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react'\nimport { CardList } from './components/card-list/card-list';\nimport {SearchBox} from './components/search-box/search-box';\nimport { Top } from './components/top/top';\nimport \"@material-tailwind/react/tailwind.css\";\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then( res => res.json())\n    .then( res => {\n      this.setState({monsters: res})\n    })\n  }\n\n  handleChange = e => this.setState({searchField:e.target.value});\n  func = () => {\n    console.log(123, this)\n  }\n\n  render(){\n    const {monsters, searchField} = this.state;\n    const filtered = monsters.filter( m => m.name.includes(searchField));\n\n    return (\n      <div className=\"App m-4\">\n        <Top></Top>\n\n        <button onClick={this.func}>button</button>\n        <SearchBox handleChange={this.handleChange}/>\n        <CardList monsters={filtered}>\n        </CardList>  \n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}